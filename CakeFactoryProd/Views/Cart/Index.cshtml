@model IEnumerable<CakeFactoryProd.ViewModels.CartVM>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Cart</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Image")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Shape)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.CustomMessage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.PickupDate)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <img src="@item.CakeVM.CakeImage" class="w-100"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Shape)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderVM.CustomMessage)
            </td>
            <td class="total">
                    @Html.DisplayFor(modelItem => item.OrderVM.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderVM.Quantity)
             </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderVM.PickupDate.Value)
            </td>
            <td>
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div>Total: $<span id="purchase-total">0.00</span></div>

@if (SignInManager.IsSignedIn(User))
{
    @if (Model.Count() > 0)
    {
        <div id="paypal-button"></div>

        <form asp-controller="Cart" asp-action="Confirmation">
            <button type="submit" class="btn btn-outline-primary" >Submit</button>
        </form>
    } 
    else
    {
        <div>No items in cart.</div>
    }
} 
else
{
    <div>
        <p>Please log in to complete your order.</p>
        <a class="btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </div>
}
<script>
    let prices = document.querySelectorAll(".total");
    let totalPrice = 0.00;
    const cartTotal = document.getElementById("purchase-total");

    prices.forEach((price)=> {
        decimalPrice = parseFloat(price.innerText)
        totalPrice += decimalPrice;
    })

    cartTotal.innerHTML = totalPrice;
</script>