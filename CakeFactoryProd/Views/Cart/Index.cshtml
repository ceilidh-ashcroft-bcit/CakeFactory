@model IEnumerable<CakeFactoryProd.ViewModels.CartVM>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



<h1>Cart</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Image")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Shape)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeVM.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderVM.PickupDate)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <img src="@item.CakeVM.ImageName" class="img-thumbnail" style="max-width:30%"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Shape)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeVM.Name)
            </td>
            <td class="total">
                    @Html.DisplayFor(modelItem => item.OrderVM.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderVM.Quantity)
             </td>
            <td>
                @{
                    var dt = item.OrderVM.PickupDate.Value.ToString("MMMM dd'th', yyyy");
                }
                @dt
            </td>
            <td>
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div>Total: CAD <span id="purchase-total">0.00</span></div>

@if (SignInManager.IsSignedIn(User))
{
    @if (Model.Count() > 0)
    {
        @* paypal button *@
        <div id="paypal-button">
            <script src="https://www.paypalobjects.com/api/checkout.js"></script>
            <script>
                paypal.Button.render({
                    env: 'sandbox', // Or ' production '
                    style: { // You can customize your button here.
                        size: 'small',
                        color: 'gold',
                        shape: 'pill',
                        label: 'checkout'
                    },
                    client: {
                        // You need to change this to your client ID
                        sandbox: 'AZLarkawWPH8YwRsktiFLqRpM7n9qH-hB6x4Ajf7L0yXdJlDN6VymnjhCsjxyyp5hV_t8B_bfPrcWWrv',
                    },

                    commit: true, // Show a 'Pay Now' button

                    payment: function (data, actions) {
                        return actions.payment.create({
                            payment: {
                                transactions: [{
                                    // The 'custom' field helps you to link the paypal request
                                    // with paypal's response which is important.

                                    // You may want use a 'custom' field to send an accountID
                                    // from your site so you can uniquely identify the person
                                    // making the payment when Paypal notifies you.

                                    // Sometimes a person at your site will pay at Paypal with
                                    // an entirely different set of credentials. They may pay with
                                    // a credit card or account which belongs to their spouse or
                                    // another family member. In situations like these, relating
                                    // payments to accounts on your site can be difficult.

                                    // The custom property value that you send to Paypal for a
                                    // payment request is returned in Paypal's reponse.
                                    custom: 'Custom data goes here!',
                                    amount: {
                                        total:
                                            document.getElementById("purchase-total").innerHTML
                                        , currency: "CAD"
                                            //document.getElementById("currency").innerHTML
                                    }
                                }]
                            }
                        });
                    },
                    onAuthorize: function (data, actions) {
                        return actions.payment.execute().then(function (payment) {
                            var dataObject = {
                                "cart": payment.cart,
                                "intent": payment.intent,
                                "paymentID": payment.id,
                                "createTime": payment.create_time,
                                "paymentState": payment.state,
                                "payerEmail": payment.payer.payer_info.email,
                                "payerID": payment.payer.payer_info.payer_id,
                                "payerFirstName": payment.payer.payer_info.first_name,
                                "payerLastName": payment.payer.payer_info.last_name,
                                "payerMiddleName": payment.payer.payer_info.middle_name,
                                "payerCountryCode": payment.payer.payer_info.country_code,
                                "paymentMethod": payment.payer.payment_method,
                                "payerStatus": payment.payer.status,
                                "amount": payment.transactions[0].amount.total,
                                "currency": payment.transactions[0].amount.currency,
                                "custom": payment.transactions[0].custom
                            }

                            // The payment is complete!
                            // You can now show a confirmation message to the customer
                            $.ajax({
                                type: "post",
                                url: "/Cart/Confirmation",
                                data: JSON.stringify(dataObject),
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",

                                //after success
                                success: function (msg) {
                                    window.location.href
                                        = "/Cart/Success?orderId=" + msg.orderId;
                                },
                                //after fail
                                error: function (msg) {
                                    // ******* instead of sending alert, load an error page
                                    //guiding the user to talk to the admin or email
                                    window.location.href = "/Cart/Error";
                                }
                            });
                        })
                    },
                    onCancel: function (data, actions) {
                        /*
                        * Buyer cancelled the payment
                        */
                    },
                }, '#paypal-button');
            </script>
        </div>

@*        <form asp-controller="Cart" asp-action="Confirmation">
            <button type="submit" class="btn btn-outline-primary" >Submit</button>
        </form>*@
    } 
    else
    {
        <div>No items in cart.</div>
    }
} 
else
{
    <div>
        <p>Please log in to complete your order.</p>
        <a class="btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </div>
}
<script>
    //let CADprice = new Intl.NumberFormat('en-US', {
    //    style: 'currency',
    //    currency: 'CAD'
    //});

    let prices = document.querySelectorAll(".total");
    let totalPrice = 0.00;
    const cartTotal = document.getElementById("purchase-total");
    console.log("cartTotal: ", cartTotal);
    prices.forEach((price)=> {
        decimalPrice = parseFloat(price.innerText)
        totalPrice += decimalPrice;
    })

    cartTotal.innerHTML = totalPrice.toFixed(2);
</script>